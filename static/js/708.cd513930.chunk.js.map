{"version":3,"file":"static/js/708.cd513930.chunk.js","mappings":"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","sources":["hooks/useForm.js","components/contact/Contact.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\n/*---- Imported resources ----*/\r\nimport Swal from 'sweetalert2';\r\n\r\n/*---- Custom hook ----*/\r\nconst useForm = (initialForm, formValidations) => {\r\n\tconst [form, setForm] = useState(initialForm);\r\n\tconst [errors, setErrors] = useState({});\r\n\tconst showAlert = () => {\r\n\t\tSwal.fire({\r\n\t\t\tposition: 'center',\r\n\t\t\ticon: 'success',\r\n\t\t\ttitle: \"Thanks! We'll be getting back to you soon!\",\r\n\t\t\tshowConfirmButton: false,\r\n\t\t\ttimer: 3000,\r\n\t\t});\r\n\t};\r\n\tconst handleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetForm({\r\n\t\t\t...form,\r\n\t\t\t[name]: value,\r\n\t\t});\r\n\t};\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\thandleChange(e);\r\n\t\tsetErrors(formValidations(form));\r\n\t\tif (Object.keys(errors).length === 0) {\r\n\t\t\tif (Object.values(form).every((x) => x !== '')) {\r\n\t\t\t\tshowAlert();\r\n\t\t\t}\r\n\t\t\tsetForm(initialForm);\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\treturn {\r\n\t\tform,\r\n\t\terrors,\r\n\t\thandleChange,\r\n\t\thandleSubmit,\r\n\t};\r\n};\r\n\r\nexport default useForm;\r\n","/*---- Imported hooks ----*/\r\nimport useForm from '../../hooks/useForm';\r\n\r\n/*---- Imported components ----*/\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n/*---- Functions and variables ----*/\r\nconst initialForm = {\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\tphone: '',\r\n\temail: '',\r\n\tcomment: '',\r\n};\r\nconst formValidations = (form) => {\r\n\tlet errors = {};\r\n\tlet emailRegEx = /^(\\w+[/./-]?){1,}@[a-z]+[/.]\\w{2,}$/;\r\n\tif (!form.firstName.trim()) {\r\n\t\terrors.firstName = 'First Name cannot be empty';\r\n\t}\r\n\tif (!form.lastName.trim()) {\r\n\t\terrors.lastName = 'Last Name cannot be empty';\r\n\t}\r\n\tif (!form.phone.trim()) {\r\n\t\terrors.phone = 'Phone cannot be empty';\r\n\t}\r\n\tif (!form.email.trim()) {\r\n\t\terrors.email = 'Email Address cannot be empty';\r\n\t} else if (!emailRegEx.test(form.email.trim())) {\r\n\t\terrors.email = 'Looks like this is not an email';\r\n\t}\r\n\tif (!form.comment.trim()) {\r\n\t\terrors.comment = 'Please tell us about your project';\r\n\t}\r\n\treturn errors;\r\n};\r\n\r\n/*---- Component ----*/\r\nconst Contact = () => {\r\n\tconst { form, errors, handleChange, handleSubmit } = useForm(initialForm, formValidations);\r\n\treturn (\r\n\t\t<div className='contact-section--container'>\r\n\t\t\t<h2 variant='h2' className='contact-section--title'>\r\n\t\t\t\tBATHROOM REMODELING CONSULTATION\r\n\t\t\t</h2>\r\n\t\t\t<Form onSubmit={handleSubmit} className='contact-form'>\r\n\t\t\t\t<div className='contact-form--field'>\r\n\t\t\t\t\t<Form.Group className='form-field--container'>\r\n\t\t\t\t\t\t<Form.Label className='form-field--label'>Name</Form.Label>\r\n\t\t\t\t\t\t<div className='form-field--input-container'>\r\n\t\t\t\t\t\t\t<Form.Control type='text' name='firstName' placeholder='First' className={`input ${errors.firstName && 'input-error'}`} onChange={handleChange} value={form.firstName} />\r\n\t\t\t\t\t\t\t{errors.firstName && <p className='error-msg'>{errors.firstName}</p>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group className='form-field--container'>\r\n\t\t\t\t\t\t<Form.Label className='form-field--label last-name-label'>Last name</Form.Label>\r\n\t\t\t\t\t\t<div className='form-field--input-container'>\r\n\t\t\t\t\t\t\t<Form.Control type='text' name='lastName' placeholder='Last' className={`input ${errors.lastName && 'input-error'}`} onChange={handleChange} value={form.lastName} />\r\n\t\t\t\t\t\t\t{errors.lastName && <p className='error-msg'>{errors.lastName}</p>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='contact-form--field'>\r\n\t\t\t\t\t<Form.Group className='form-field--container'>\r\n\t\t\t\t\t\t<Form.Label className='form-field--label'>Phone</Form.Label>\r\n\t\t\t\t\t\t<div className='form-field--input-container'>\r\n\t\t\t\t\t\t\t<Form.Control type='number' name='phone' placeholder='(___) _____-______' className={`input ${errors.phone && 'input-error'}`} onChange={handleChange} value={form.phone} />\r\n\t\t\t\t\t\t\t{errors.phone && <p className='error-msg'>{errors.phone}</p>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group className='form-field--container'>\r\n\t\t\t\t\t\t<Form.Label className='form-field--label'>E-mail</Form.Label>\r\n\t\t\t\t\t\t<div className='form-field--input-container'>\r\n\t\t\t\t\t\t\t<Form.Control type='text' name='email' placeholder='name@example.com' className={`input ${errors.email && 'input-error'}`} onChange={handleChange} value={form.email} />\r\n\t\t\t\t\t\t\t{errors.email && <p className='error-msg'> {errors.email}</p>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Form.Group className='text-area--container'>\r\n\t\t\t\t\t<Form.Label className='text-area--label'>Tell us about your project</Form.Label>\r\n\t\t\t\t\t<div className='text-area--input-container'>\r\n\t\t\t\t\t\t<Form.Control type='text' name='comment' placeholder='Type something...' as='textarea' rows={9} className={`text-area--input ${errors.comment && 'input-error'}`} onChange={handleChange} value={form.comment} />\r\n\t\t\t\t\t\t{errors.comment && <p className='error-msg'>{errors.comment}</p>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<div className='contact-form--btn-container'>\r\n\t\t\t\t\t<Button className='contact-form--btn' type='submit'>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["initialForm","formValidations","_useState","useState","_useState2","_slicedToArray","form","setForm","_useState3","_useState4","errors","setErrors","handleChange","e","_e$target","target","name","value","_objectSpread","_defineProperty","handleSubmit","preventDefault","Object","keys","length","values","every","x","Swal","position","icon","title","showConfirmButton","timer","firstName","lastName","phone","email","comment","trim","test","_useForm","useForm","_jsxs","className","children","_jsx","variant","Form","onSubmit","type","placeholder","concat","onChange","as","rows","Button"],"sourceRoot":""}