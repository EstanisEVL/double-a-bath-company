{"version":3,"file":"static/js/708.0ec8a58e.chunk.js","mappings":"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","sources":["hooks/useForm.js","components/contact/Contact.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n/*---- Sweet Alert ----*/\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const useForm = ( initialForm, formValidations ) => {\r\n  const [ form, setForm ] = useState(initialForm);\r\n  const [ errors, setErrors ] = useState({});\r\n\r\n  const showAlert = () => {\r\n    Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Thanks! We\\'ll be getting back to you soon!',\r\n      showConfirmButton: false,\r\n      timer: 3000\r\n    })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({\r\n      ...form,\r\n      [ name ]: value\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleChange(e);\r\n    setErrors(formValidations(form));\r\n    if(Object.keys(errors).length === 0) {\r\n      setForm(initialForm);\r\n    } else {\r\n      return;\r\n    };\r\n    showAlert();\r\n  };\r\n\r\n  return {\r\n    form,\r\n    errors,\r\n    handleChange,\r\n    handleSubmit\r\n  };\r\n};","/*---- Imported hooks ----*/\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\n/*---- Imported components ----*/\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst initialForm = {\r\n  firstName: '',\r\n  lastName: '',\r\n  phone: '', \r\n  email: '',\r\n  comment: ''\r\n}\r\n\r\nconst formValidations = ( form ) => {\r\n  let errors = {};\r\n  let emailRegEx = /^(\\w+[/./-]?){1,}@[a-z]+[/.]\\w{2,}$/;\r\n\r\n  if(!form.firstName.trim()) {\r\n    errors.firstName = 'First Name cannot be empty';\r\n  };\r\n\r\n  if(!form.lastName.trim()) {\r\n    errors.lastName = 'Last Name cannot be empty';\r\n  };\r\n\r\n  if(!form.phone.trim()) {\r\n    errors.phone = 'Phone cannot be empty';\r\n  };\r\n\r\n  if(!form.email.trim()) {\r\n    errors.email = 'Email Address cannot be empty';\r\n  } else if (!emailRegEx.test(form.email.trim())) {\r\n    errors.email = 'Looks like this is not an email';\r\n  };\r\n\r\n  if(!form.comment.trim()) {\r\n    errors.comment = 'Please tell us about your project';\r\n  };\r\n  return errors;\r\n}\r\nconst Contact = () => {\r\n\r\n  const {\r\n    form,\r\n    errors,\r\n    handleChange,\r\n    handleSubmit\r\n  } = useForm(initialForm, formValidations);\r\n\r\n\treturn (\r\n\t\t<div\r\n      className='contact-section--container'>\r\n\t\t\t<h2\r\n        variant='h2'\r\n        className='contact-section--title'\r\n        >\r\n\t\t\t\tBATHROOM REMODELING CONSULTATION\r\n\t\t\t</h2>\r\n\t\t\t<Form\r\n        onSubmit={ handleSubmit }\r\n        className='contact-form'\r\n        >\r\n\t\t\t\t<div\r\n          className='contact-form--field'>\r\n\t\t\t\t\t<Form.Group\r\n            className='form-field--container'>\r\n\t\t\t\t\t\t<Form.Label\r\n              className='form-field--label'>\r\n                Name\r\n            </Form.Label>\r\n\t\t\t\t\t\t<div\r\n              className='form-field--input-container'>\r\n                <Form.Control\r\n                  type='text'\r\n                  name='firstName'\r\n                  placeholder='First' \r\n                  className={`input ${ errors.firstName && 'input-error'}`}\r\n                  onChange={ handleChange }\r\n                  value={ form.firstName }\r\n                />\r\n                {\r\n                  errors.firstName && <p className='error-msg'>{ errors.firstName }</p>\r\n                }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group\r\n            className='form-field--container'>\r\n\t\t\t\t\t\t<Form.Label className='form-field--label last-name-label'>Last name</Form.Label>\r\n\t\t\t\t\t\t<div className='form-field--input-container'>\r\n\t\t\t\t\t\t\t<Form.Control\r\n              type='text'\r\n              name='lastName'\r\n              placeholder='Last'\r\n              className={`input ${ errors.lastName && 'input-error'}`}\r\n              onChange={ handleChange }\r\n              value={ form.lastName }\r\n              />\r\n              {\r\n                errors.lastName && <p className='error-msg'>{ errors.lastName }</p>\r\n              }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='contact-form--field'>\r\n\t\t\t\t\t<Form.Group\r\n            className='form-field--container'>\r\n\t\t\t\t\t\t<Form.Label className='form-field--label'>Phone</Form.Label>\r\n\t\t\t\t\t\t<div className='form-field--input-container'>\r\n\t\t\t\t\t\t\t<Form.Control\r\n              type='number'\r\n              name='phone'\r\n              placeholder='(___) _____-______'\r\n              className={`input ${ errors.phone && 'input-error'}`}\r\n              onChange={ handleChange }\r\n              value={ form.phone }\r\n              />\r\n              {\r\n                errors.phone && <p className='error-msg'>{ errors.phone }</p>\r\n              }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group\r\n            className='form-field--container'>\r\n\t\t\t\t\t\t<Form.Label className='form-field--label'>E-mail</Form.Label>\r\n\t\t\t\t\t\t<div\r\n              className='form-field--input-container'\r\n              >\r\n                <Form.Control\r\n                type='text'\r\n                name='email'\r\n                placeholder='name@example.com'\r\n                className={`input ${ errors.email && 'input-error'}`}\r\n                onChange={ handleChange }\r\n                value={ form.email }\r\n                />\r\n                {\r\n                errors.email &&\r\n                <p className='error-msg'> { errors.email }</p>\r\n                }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Form.Group\r\n          className='text-area--container'\r\n          >\r\n            <Form.Label\r\n              className='text-area--label'\r\n              >\r\n                Tell us about your project\r\n            </Form.Label>\r\n\t\t\t\t\t<div\r\n            className='text-area--input-container'\r\n            >\r\n              <Form.Control\r\n                type='text'\r\n                name='comment'\r\n                placeholder='Type something...'\r\n                as='textarea'\r\n                rows={9}\r\n                className={`text-area--input ${ errors.comment && 'input-error'}`}\r\n                onChange={ handleChange }\r\n                value={ form.comment }\r\n              />\r\n              {\r\n                errors.comment &&\r\n                <p className='error-msg'>{ errors.comment }</p>\r\n              }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t\r\n        <div\r\n          className='contact-form--btn-container'>\r\n            <Button\r\n              className='contact-form--btn'\r\n              type='submit'\r\n            >\r\n              Submit\r\n            </Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["useForm","initialForm","formValidations","_useState","useState","_useState2","_slicedToArray","form","setForm","_useState3","_useState4","errors","setErrors","handleChange","e","_e$target","target","name","value","_objectSpread","_defineProperty","handleSubmit","preventDefault","Object","keys","length","Swal","position","icon","title","showConfirmButton","timer","firstName","lastName","phone","email","comment","trim","test","_useForm","_jsxs","className","children","_jsx","variant","Form","onSubmit","type","placeholder","concat","onChange","as","rows","Button"],"sourceRoot":""}